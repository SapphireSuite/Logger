# Copyright (c) 2022 Sapphire's Suite. All Rights Reserved.

name: Windows

# Trigger the action.
on:
  push:
    branches:
      - main
      - master
      - dev
      - dev_*
      - '!dev_osx'
      - '!dev_macos'
      - '!dev_unix'


# Settings common to all jobs.
defaults:
  run:
    shell: bash


# Variables common to all jobs.
env:
  CMAKE_V: '3.17.0'
  CMAKE_OPTIONS: '-DSA_CI=1 -DSA_LOGGER_BUILD_TESTS_OPT=ON'


# Job matrix
jobs:

  ctests_win:
    name: ${{ matrix.config }} ${{ matrix.gen }} ${{ matrix.gen_v }} ${{ matrix.compiler }}

    # Setup environment.
    runs-on: windows-latest

    strategy:

      # Don't cancel jobs on failure.
      fail-fast: false

      matrix:

        config:
          - Debug
          - Release

        gen:
          - Ninja
          - VS

        compiler:
          #- GNU
          - Clang
          - MSVC

        include:
          #- gen: VS
          #  gen_v: Visual Studio 15 2017
          - gen: VS
            gen_v: Visual Studio 16 2019
          #- gen: VS
          #  gen_v: Visual Studio 17 2022

        exclude:
          - gen: Ninja
            compiler: MSVC
          - gen: VS
            compiler: GNU



    # Steps execution.
    steps:

        - name: "[Action] Checkout repository"
          uses: actions/checkout@v2
          with:
            submodules: recursive


        # Install CMake.
        - name: "[Action] Install CMake"
          uses: jwlawson/actions-setup-cmake@v1.8
          with:
            cmake-version: ${{ env.CMAKE_V }}


#{ Generators

        # Install Ninja.
        - name: "[Action] Install Ninja 1/2"
          if: ${{ matrix.gen == 'Ninja' }}
          uses: seanmiddleditch/gha-setup-ninja@master

        # Set env variables.
        - name: "[Command] Install Ninja 2/2"
          if: ${{ matrix.gen == 'Ninja' }}
          run: echo "GEN=Ninja" >> $GITHUB_ENV


        # Install Visual Studio.
        - name: "[Command] Install Visual Studio"
          if: ${{ matrix.gen == 'VS' }}
          run: |
            echo "GEN="${{ matrix.gen_v }}" -A x64" >> $GITHUB_ENV
            echo ${GEN}

#}

#{ Compilers

        # Install GNU.
        - name: "[Package] Install GNU"
          if: ${{ matrix.compiler == 'GNU' }}
          run: |
              echo "CC=gcc" >> $GITHUB_ENV
              echo "CXX=g++" >> $GITHUB_ENV


        # Install Clang.
        - name: "[Package] Install LLVM and Clang"
          if: ${{ matrix.compiler == 'Clang' && matrix.gen != 'VS' }}
          run: |
              echo "CC=C:/Program Files/LLVM/bin/clang" >> $GITHUB_ENV
              echo "CXX=C:/Program Files/LLVM/bin/clang++" >> $GITHUB_ENV


        # Install ClangCl.
        - name: "[Package] Install ClangCl"
          if: ${{ matrix.compiler == 'Clang' && matrix.gen == 'VS' }}
          run: |
              echo "CC=clang-cl" >> $GITHUB_ENV
              echo "CXX=clang-cl" >> $GITHUB_ENV
              echo "GEN=${GEN} -T ClangCl" >> $GITHUB_ENV
              echo ${GEN}

#}


#{ Build & Test

        # Deploy & Build & Test
        - name: Generate Project
          run: cmake -B Build/${{ matrix.gen }}/${{ matrix.config }} -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G ${GEN}

        - name: Build Project
          run: cmake --build Build/${{ matrix.gen }}/${{ matrix.config }} --config ${{ matrix.config }} --verbose

        - name: Run CTests
          run: cd Build/${{ matrix.gen }}/${{ matrix.config }} && ctest -C ${{ matrix.config }} -V

#}
